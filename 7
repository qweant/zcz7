def func8(arg17, arg18):
    var23 = func9(arg18, arg17)
    var24 = -222110814 | (arg18 + arg18)
    var25 = arg17 + (1331171962 + 479)
    var26 = var24 ^ var24
    var27 = var25 | 19 | var25 | arg18
    var28 = var23 | var27
    var29 = (var23 ^ (var25 | arg18)) | arg18
    var30 = ((var29 ^ var24) ^ -958541824) | var24
    var31 = var27 & var26
    var32 = var24 & var24
    var33 = var32 & var28 | var27
    var34 = arg17 | (var30 | var24) + var28
    var35 = var34 + arg17
    if var23 < var27:
        var36 = ((-103 & var33) - arg17) ^ var35
    else:
        var36 = var25 - (var23 & var33) & var34
    var37 = var26 & 2056426582
    var38 = var24 & var37
    var39 = (var25 & var33) ^ var31
    var40 = var35 + var33
    if var31 < var31:
        var41 = var32 & var38
    else:
        var41 = (var24 + arg18) & var39 ^ arg18
    var42 = var24 ^ var23
    var43 = (379906820 & var32 + var38) ^ var38
    var44 = var34 - (var27 + var40 - var35)
    var45 = var44 + -899 ^ var24 & var39
    var46 = var45 - var38 + var45 ^ var32
    var47 = (var28 - var27) ^ var46 & var29
    result = var40 | (var29 - arg17)
    return result
def func9(arg19, arg20):
    var21 = 0
    for var22 in xrange(50):
        var21 += arg20 & (7 | arg19)
    return var21
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var8 = func5()
    var11 = class6()
    for var12 in range(23):
        var13 = var11.func7
        var13(arg1, var7)
    if arg2 < arg1:
        var14 = arg2 | -1144740032
    else:
        var14 = 556 & arg2 & var7 + (var8 & (-347 ^ var8 & var8) & -1132076249) ^ -446 | arg2
    var15 = -1662948922 & -1700909447
    var16 = arg1 ^ var8 + var7
    result = var16 & arg1 ^ var15 | var7 | (((((arg1 | var16) & var15) + 376 & 633) - var7) ^ var7 + var16)
    return result
class class6(object):
    def func7(self, arg9, arg10):
        return 0
def func5():
    func3()
    result = len(xrange(24))
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : -2
def func2(arg3, arg4):
    var5 = 0
    for var6 in [arg4 + (arg3 & arg4) for i in xrange(5)]:
        var5 += var6 + arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 8'
    print 'arg_number: 17'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 48'
    for i in xrange(25000):
        x = 5
        x = func8(x, i)
        print x,def func8(arg17, arg18):
    var23 = func9(arg18, arg17)
    var24 = -222110814 | (arg18 + arg18)
    var25 = arg17 + (1331171962 + 479)
    var26 = var24 ^ var24
    var27 = var25 | 19 | var25 | arg18
    var28 = var23 | var27
    var29 = (var23 ^ (var25 | arg18)) | arg18
    var30 = ((var29 ^ var24) ^ -958541824) | var24
    var31 = var27 & var26
    var32 = var24 & var24
    var33 = var32 & var28 | var27
    var34 = arg17 | (var30 | var24) + var28
    var35 = var34 + arg17
    if var23 < var27:
        var36 = ((-103 & var33) - arg17) ^ var35
    else:
        var36 = var25 - (var23 & var33) & var34
    var37 = var26 & 2056426582
    var38 = var24 & var37
    var39 = (var25 & var33) ^ var31
    var40 = var35 + var33
    if var31 < var31:
        var41 = var32 & var38
    else:
        var41 = (var24 + arg18) & var39 ^ arg18
    var42 = var24 ^ var23
    var43 = (379906820 & var32 + var38) ^ var38
    var44 = var34 - (var27 + var40 - var35)
    var45 = var44 + -899 ^ var24 & var39
    var46 = var45 - var38 + var45 ^ var32
    var47 = (var28 - var27) ^ var46 & var29
    result = var40 | (var29 - arg17)
    return result
def func9(arg19, arg20):
    var21 = 0
    for var22 in xrange(50):
        var21 += arg20 & (7 | arg19)
    return var21
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var8 = func5()
    var11 = class6()
    for var12 in range(23):
        var13 = var11.func7
        var13(arg1, var7)
    if arg2 < arg1:
        var14 = arg2 | -1144740032
    else:
        var14 = 556 & arg2 & var7 + (var8 & (-347 ^ var8 & var8) & -1132076249) ^ -446 | arg2
    var15 = -1662948922 & -1700909447
    var16 = arg1 ^ var8 + var7
    result = var16 & arg1 ^ var15 | var7 | (((((arg1 | var16) & var15) + 376 & 633) - var7) ^ var7 + var16)
    return result
class class6(object):
    def func7(self, arg9, arg10):
        return 0
def func5():
    func3()
    result = len(xrange(24))
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : -2
def func2(arg3, arg4):
    var5 = 0
    for var6 in [arg4 + (arg3 & arg4) for i in xrange(5)]:
        var5 += var6 + arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 8'
    print 'arg_number: 17'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 48'
    for i in xrange(25000):
        x = 5
        x = func8(x, i)
        print x,def func8(arg17, arg18):
    var23 = func9(arg18, arg17)
    var24 = -222110814 | (arg18 + arg18)
    var25 = arg17 + (1331171962 + 479)
    var26 = var24 ^ var24
    var27 = var25 | 19 | var25 | arg18
    var28 = var23 | var27
    var29 = (var23 ^ (var25 | arg18)) | arg18
    var30 = ((var29 ^ var24) ^ -958541824) | var24
    var31 = var27 & var26
    var32 = var24 & var24
    var33 = var32 & var28 | var27
    var34 = arg17 | (var30 | var24) + var28
    var35 = var34 + arg17
    if var23 < var27:
        var36 = ((-103 & var33) - arg17) ^ var35
    else:
        var36 = var25 - (var23 & var33) & var34
    var37 = var26 & 2056426582
    var38 = var24 & var37
    var39 = (var25 & var33) ^ var31
    var40 = var35 + var33
    if var31 < var31:
        var41 = var32 & var38
    else:
        var41 = (var24 + arg18) & var39 ^ arg18
    var42 = var24 ^ var23
    var43 = (379906820 & var32 + var38) ^ var38
    var44 = var34 - (var27 + var40 - var35)
    var45 = var44 + -899 ^ var24 & var39
    var46 = var45 - var38 + var45 ^ var32
    var47 = (var28 - var27) ^ var46 & var29
    result = var40 | (var29 - arg17)
    return result
def func9(arg19, arg20):
    var21 = 0
    for var22 in xrange(50):
        var21 += arg20 & (7 | arg19)
    return var21
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var8 = func5()
    var11 = class6()
    for var12 in range(23):
        var13 = var11.func7
        var13(arg1, var7)
    if arg2 < arg1:
        var14 = arg2 | -1144740032
    else:
        var14 = 556 & arg2 & var7 + (var8 & (-347 ^ var8 & var8) & -1132076249) ^ -446 | arg2
    var15 = -1662948922 & -1700909447
    var16 = arg1 ^ var8 + var7
    result = var16 & arg1 ^ var15 | var7 | (((((arg1 | var16) & var15) + 376 & 633) - var7) ^ var7 + var16)
    return result
class class6(object):
    def func7(self, arg9, arg10):
        return 0
def func5():
    func3()
    result = len(xrange(24))
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : -2
def func2(arg3, arg4):
    var5 = 0
    for var6 in [arg4 + (arg3 & arg4) for i in xrange(5)]:
        var5 += var6 + arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 8'
    print 'arg_number: 17'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 48'
    for i in xrange(25000):
        x = 5
        x = func8(x, i)
        print x,def func8(arg17, arg18):
    var23 = func9(arg18, arg17)
    var24 = -222110814 | (arg18 + arg18)
    var25 = arg17 + (1331171962 + 479)
    var26 = var24 ^ var24
    var27 = var25 | 19 | var25 | arg18
    var28 = var23 | var27
    var29 = (var23 ^ (var25 | arg18)) | arg18
    var30 = ((var29 ^ var24) ^ -958541824) | var24
    var31 = var27 & var26
    var32 = var24 & var24
    var33 = var32 & var28 | var27
    var34 = arg17 | (var30 | var24) + var28
    var35 = var34 + arg17
    if var23 < var27:
        var36 = ((-103 & var33) - arg17) ^ var35
    else:
        var36 = var25 - (var23 & var33) & var34
    var37 = var26 & 2056426582
    var38 = var24 & var37
    var39 = (var25 & var33) ^ var31
    var40 = var35 + var33
    if var31 < var31:
        var41 = var32 & var38
    else:
        var41 = (var24 + arg18) & var39 ^ arg18
    var42 = var24 ^ var23
    var43 = (379906820 & var32 + var38) ^ var38
    var44 = var34 - (var27 + var40 - var35)
    var45 = var44 + -899 ^ var24 & var39
    var46 = var45 - var38 + var45 ^ var32
    var47 = (var28 - var27) ^ var46 & var29
    result = var40 | (var29 - arg17)
    return result
def func9(arg19, arg20):
    var21 = 0
    for var22 in xrange(50):
        var21 += arg20 & (7 | arg19)
    return var21
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var8 = func5()
    var11 = class6()
    for var12 in range(23):
        var13 = var11.func7
        var13(arg1, var7)
    if arg2 < arg1:
        var14 = arg2 | -1144740032
    else:
        var14 = 556 & arg2 & var7 + (var8 & (-347 ^ var8 & var8) & -1132076249) ^ -446 | arg2
    var15 = -1662948922 & -1700909447
    var16 = arg1 ^ var8 + var7
    result = var16 & arg1 ^ var15 | var7 | (((((arg1 | var16) & var15) + 376 & 633) - var7) ^ var7 + var16)
    return result
class class6(object):
    def func7(self, arg9, arg10):
        return 0
def func5():
    func3()
    result = len(xrange(24))
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : -2
def func2(arg3, arg4):
    var5 = 0
    for var6 in [arg4 + (arg3 & arg4) for i in xrange(5)]:
        var5 += var6 + arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 8'
    print 'arg_number: 17'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 48'
    for i in xrange(25000):
        x = 5
        x = func8(x, i)
        print x,def func8(arg17, arg18):
    var23 = func9(arg18, arg17)
    var24 = -222110814 | (arg18 + arg18)
    var25 = arg17 + (1331171962 + 479)
    var26 = var24 ^ var24
    var27 = var25 | 19 | var25 | arg18
    var28 = var23 | var27
    var29 = (var23 ^ (var25 | arg18)) | arg18
    var30 = ((var29 ^ var24) ^ -958541824) | var24
    var31 = var27 & var26
    var32 = var24 & var24
    var33 = var32 & var28 | var27
    var34 = arg17 | (var30 | var24) + var28
    var35 = var34 + arg17
    if var23 < var27:
        var36 = ((-103 & var33) - arg17) ^ var35
    else:
        var36 = var25 - (var23 & var33) & var34
    var37 = var26 & 2056426582
    var38 = var24 & var37
    var39 = (var25 & var33) ^ var31
    var40 = var35 + var33
    if var31 < var31:
        var41 = var32 & var38
    else:
        var41 = (var24 + arg18) & var39 ^ arg18
    var42 = var24 ^ var23
    var43 = (379906820 & var32 + var38) ^ var38
    var44 = var34 - (var27 + var40 - var35)
    var45 = var44 + -899 ^ var24 & var39
    var46 = var45 - var38 + var45 ^ var32
    var47 = (var28 - var27) ^ var46 & var29
    result = var40 | (var29 - arg17)
    return result
def func9(arg19, arg20):
    var21 = 0
    for var22 in xrange(50):
        var21 += arg20 & (7 | arg19)
    return var21
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var8 = func5()
    var11 = class6()
    for var12 in range(23):
        var13 = var11.func7
        var13(arg1, var7)
    if arg2 < arg1:
        var14 = arg2 | -1144740032
    else:
        var14 = 556 & arg2 & var7 + (var8 & (-347 ^ var8 & var8) & -1132076249) ^ -446 | arg2
    var15 = -1662948922 & -1700909447
    var16 = arg1 ^ var8 + var7
    result = var16 & arg1 ^ var15 | var7 | (((((arg1 | var16) & var15) + 376 & 633) - var7) ^ var7 + var16)
    return result
class class6(object):
    def func7(self, arg9, arg10):
        return 0
def func5():
    func3()
    result = len(xrange(24))
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : -2
def func2(arg3, arg4):
    var5 = 0
    for var6 in [arg4 + (arg3 & arg4) for i in xrange(5)]:
        var5 += var6 + arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 8'
    print 'arg_number: 17'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 48'
    for i in xrange(25000):
        x = 5
        x = func8(x, i)
        print x,def func8(arg17, arg18):
    var23 = func9(arg18, arg17)
    var24 = -222110814 | (arg18 + arg18)
    var25 = arg17 + (1331171962 + 479)
    var26 = var24 ^ var24
    var27 = var25 | 19 | var25 | arg18
    var28 = var23 | var27
    var29 = (var23 ^ (var25 | arg18)) | arg18
    var30 = ((var29 ^ var24) ^ -958541824) | var24
    var31 = var27 & var26
    var32 = var24 & var24
    var33 = var32 & var28 | var27
    var34 = arg17 | (var30 | var24) + var28
    var35 = var34 + arg17
    if var23 < var27:
        var36 = ((-103 & var33) - arg17) ^ var35
    else:
        var36 = var25 - (var23 & var33) & var34
    var37 = var26 & 2056426582
    var38 = var24 & var37
    var39 = (var25 & var33) ^ var31
    var40 = var35 + var33
    if var31 < var31:
        var41 = var32 & var38
    else:
        var41 = (var24 + arg18) & var39 ^ arg18
    var42 = var24 ^ var23
    var43 = (379906820 & var32 + var38) ^ var38
    var44 = var34 - (var27 + var40 - var35)
    var45 = var44 + -899 ^ var24 & var39
    var46 = var45 - var38 + var45 ^ var32
    var47 = (var28 - var27) ^ var46 & var29
    result = var40 | (var29 - arg17)
    return result
def func9(arg19, arg20):
    var21 = 0
    for var22 in xrange(50):
        var21 += arg20 & (7 | arg19)
    return var21
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var8 = func5()
    var11 = class6()
    for var12 in range(23):
        var13 = var11.func7
        var13(arg1, var7)
    if arg2 < arg1:
        var14 = arg2 | -1144740032
    else:
        var14 = 556 & arg2 & var7 + (var8 & (-347 ^ var8 & var8) & -1132076249) ^ -446 | arg2
    var15 = -1662948922 & -1700909447
    var16 = arg1 ^ var8 + var7
    result = var16 & arg1 ^ var15 | var7 | (((((arg1 | var16) & var15) + 376 & 633) - var7) ^ var7 + var16)
    return result
class class6(object):
    def func7(self, arg9, arg10):
        return 0
def func5():
    func3()
    result = len(xrange(24))
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : -2
def func2(arg3, arg4):
    var5 = 0
    for var6 in [arg4 + (arg3 & arg4) for i in xrange(5)]:
        var5 += var6 + arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 8'
    print 'arg_number: 17'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 48'
    for i in xrange(25000):
        x = 5
        x = func8(x, i)
        print x,def func8(arg17, arg18):
    var23 = func9(arg18, arg17)
    var24 = -222110814 | (arg18 + arg18)
    var25 = arg17 + (1331171962 + 479)
    var26 = var24 ^ var24
    var27 = var25 | 19 | var25 | arg18
    var28 = var23 | var27
    var29 = (var23 ^ (var25 | arg18)) | arg18
    var30 = ((var29 ^ var24) ^ -958541824) | var24
    var31 = var27 & var26
    var32 = var24 & var24
    var33 = var32 & var28 | var27
    var34 = arg17 | (var30 | var24) + var28
    var35 = var34 + arg17
    if var23 < var27:
        var36 = ((-103 & var33) - arg17) ^ var35
    else:
        var36 = var25 - (var23 & var33) & var34
    var37 = var26 & 2056426582
    var38 = var24 & var37
    var39 = (var25 & var33) ^ var31
    var40 = var35 + var33
    if var31 < var31:
        var41 = var32 & var38
    else:
        var41 = (var24 + arg18) & var39 ^ arg18
    var42 = var24 ^ var23
    var43 = (379906820 & var32 + var38) ^ var38
    var44 = var34 - (var27 + var40 - var35)
    var45 = var44 + -899 ^ var24 & var39
    var46 = var45 - var38 + var45 ^ var32
    var47 = (var28 - var27) ^ var46 & var29
    result = var40 | (var29 - arg17)
    return result
def func9(arg19, arg20):
    var21 = 0
    for var22 in xrange(50):
        var21 += arg20 & (7 | arg19)
    return var21
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var8 = func5()
    var11 = class6()
    for var12 in range(23):
        var13 = var11.func7
        var13(arg1, var7)
    if arg2 < arg1:
        var14 = arg2 | -1144740032
    else:
        var14 = 556 & arg2 & var7 + (var8 & (-347 ^ var8 & var8) & -1132076249) ^ -446 | arg2
    var15 = -1662948922 & -1700909447
    var16 = arg1 ^ var8 + var7
    result = var16 & arg1 ^ var15 | var7 | (((((arg1 | var16) & var15) + 376 & 633) - var7) ^ var7 + var16)
    return result
class class6(object):
    def func7(self, arg9, arg10):
        return 0
def func5():
    func3()
    result = len(xrange(24))
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : -2
def func2(arg3, arg4):
    var5 = 0
    for var6 in [arg4 + (arg3 & arg4) for i in xrange(5)]:
        var5 += var6 + arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 8'
    print 'arg_number: 17'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 48'
    for i in xrange(25000):
        x = 5
        x = func8(x, i)
        print x,def func8(arg17, arg18):
    var23 = func9(arg18, arg17)
    var24 = -222110814 | (arg18 + arg18)
    var25 = arg17 + (1331171962 + 479)
    var26 = var24 ^ var24
    var27 = var25 | 19 | var25 | arg18
    var28 = var23 | var27
    var29 = (var23 ^ (var25 | arg18)) | arg18
    var30 = ((var29 ^ var24) ^ -958541824) | var24
    var31 = var27 & var26
    var32 = var24 & var24
    var33 = var32 & var28 | var27
    var34 = arg17 | (var30 | var24) + var28
    var35 = var34 + arg17
    if var23 < var27:
        var36 = ((-103 & var33) - arg17) ^ var35
    else:
        var36 = var25 - (var23 & var33) & var34
    var37 = var26 & 2056426582
    var38 = var24 & var37
    var39 = (var25 & var33) ^ var31
    var40 = var35 + var33
    if var31 < var31:
        var41 = var32 & var38
    else:
        var41 = (var24 + arg18) & var39 ^ arg18
    var42 = var24 ^ var23
    var43 = (379906820 & var32 + var38) ^ var38
    var44 = var34 - (var27 + var40 - var35)
    var45 = var44 + -899 ^ var24 & var39
    var46 = var45 - var38 + var45 ^ var32
    var47 = (var28 - var27) ^ var46 & var29
    result = var40 | (var29 - arg17)
    return result
def func9(arg19, arg20):
    var21 = 0
    for var22 in xrange(50):
        var21 += arg20 & (7 | arg19)
    return var21
def func1(arg1, arg2):
    var7 = func2(arg2, arg1)
    var8 = func5()
    var11 = class6()
    for var12 in range(23):
        var13 = var11.func7
        var13(arg1, var7)
    if arg2 < arg1:
        var14 = arg2 | -1144740032
    else:
        var14 = 556 & arg2 & var7 + (var8 & (-347 ^ var8 & var8) & -1132076249) ^ -446 | arg2
    var15 = -1662948922 & -1700909447
    var16 = arg1 ^ var8 + var7
    result = var16 & arg1 ^ var15 | var7 | (((((arg1 | var16) & var15) + 376 & 633) - var7) ^ var7 + var16)
    return result
class class6(object):
    def func7(self, arg9, arg10):
        return 0
def func5():
    func3()
    result = len(xrange(24))
    func4()
    return result
def func4():
    global len
    del len
def func3():
    global len
    len = lambda x : -2
def func2(arg3, arg4):
    var5 = 0
    for var6 in [arg4 + (arg3 & arg4) for i in xrange(5)]:
        var5 += var6 + arg3
    return var5
if __name__ == "__main__":
    print 'prog_size: 4'
    print 'func_number: 8'
    print 'arg_number: 17'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 48'
    for i in xrange(25000):
        x = 5
        x = func8(x, i)
        print x,
